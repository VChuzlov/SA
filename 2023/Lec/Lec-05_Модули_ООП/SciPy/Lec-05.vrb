\frametitle{Смешанные режимы использования: \\ \texttt {\_\_name\_\_} и \texttt {\_\_main\_\_}}
\scriptsize
\begin{itemize}
^^I\item Со временем операторы \mintinline{python}|import| и \mintinline{python}|from| были расширены, чтобы позволить назначать импортированному имени другое имя в сценарии:
\vfill
\begin{minted}{python}
import modulename as name  # Использовать name вместо modulename
|\space|
\end{minted}
\vfill
\item Это расширение часто применяется с целью предоставления кратких псевдонимов для более длинных имен и устранения конфликтов имен, когда в сценарии уже используется имя, которое иначе было бы перезаписано обычным оператором:
\begin{minted}{python}
import reallylongname as name
from module1 import utility as util1
from module2 import utility as util2

name.func()
util1()
util2()
|\space|
\end{minted}
\item Если в новом выпуске библиотеки модуль или инструмент, широко используемый в вашем коде, получает новое имя, тогда Вы при импортировании всего лишь назначаете ему прежнее имя и предотвращаете нарушение работоспособности имеющегося кода:
\vfill
\begin{minted}{python}
import newname as oldname
from library import newname as oldname
|\space|
\end{minted}
\end{itemize}
\vfill
