\frametitle{Метод Рунге-Кутты}
\scriptsize
\begin{minted}[firstnumber=last]{python}
def rk(func, x0, xf, y0, h, args=()):
    count = int((xf - x0) / h) + 1
    y = np.zeros((count, y0.shape[0]))
    x, y[0] = x0, y0[:].copy()
    for i in range(1, count):
        k1 = func(x, y[i-1], *args)
        k2 = func(x + h / 2, [y + k * h / 2 for y, k in zip(y[i-1], k1)], *args)
        k3 = func(x + h / 2, [y + k * h / 2 for y, k in zip(y[i-1], k2)], *args)
        k4 = func(x + h, [y + k * h for y, k in zip(y[i-1], k3)], *args)
        for j in range(len(y0)):
            y[i][j] = y[i-1][j] + h / 6 * (k1[j] + 2 * k2[j] + 2 * k3[j] + k4[j])
        x += h
    return y


if __name__ == '__main__':
    k, y0 = np.array([.2, .1, .1, .1]), np.array([1, .5, .2])
    t0, tf = 0, 10
    y_rk = rk(func, t0, tf, y0, 0.1, args=(k, ))
|\space|
\end{minted}
\vfill
